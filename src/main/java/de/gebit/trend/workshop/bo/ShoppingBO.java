//
// ShoppingBO.java
//
// Copyright (C) 2022
// GEBIT Solutions GmbH,
// Berlin, Duesseldorf, Stuttgart (Germany)
// All rights reserved.
//
//

package de.gebit.trend.workshop.bo;

import de.gebit.trend.gui.application.ApplicationContextManager;
import de.gebit.trend.model.annotations.DomainType;
import de.gebit.trend.model.annotations.Generated;
import de.gebit.trend.model.annotations.GeneratedType;
import de.gebit.trend.model.annotations.Interface;
import de.gebit.trend.model.annotations.PersistentKey;
import de.gebit.trend.model.annotations.Stereotype;
import de.gebit.trend.model.annotations.UIDescriptor;
import de.gebit.trend.model.annotations.persistence.PrePersist;
import de.gebit.trend.model.annotations.persistence.PreUpdate;

/**
 *
 * @author Tom
 * @version 19 Jan 2022
 */
@Interface(false)
@Stereotype(de.gebit.trend.model.UMLClass.STEREOTYPE_ABSTRACT_BUSINESS_OBJECT)
public class ShoppingBO extends de.gebit.trend.bo.AbstractBusinessObject  {

	/**
	 * Constant to be used instead of referring to an attribute (external field) instead of using a String. 
	 */
	@Generated(type = GeneratedType.CONSTANT, generatedFor = "id")
	public static final String ID_FIELD = "id";

	/**
	 * Constant to be used instead of referring to an attribute (external field) instead of using a String. 
	 */
	@Generated(type = GeneratedType.CONSTANT, generatedFor = "lastUser")
	public static final String LAST_USER_FIELD = "lastUser";

	@PersistentKey(autogenerated = true)
	@UIDescriptor(readonly = true)
	private Long id;

	@DomainType(NameDomainType.class)
	@UIDescriptor(readonly = true)
	private String lastUser;

	/**
	 * Returns the  {@link #id}  instance variable. <span style="display: none;">Generated getter method. To avoid re-generation, remove the &#64;Generated annotation.</span>
	 * @return  the 'id' instance variable.
	 */
	@Generated(type = GeneratedType.GETTER, generatedFor = "id")
	public Long getId() {
		resolveGet("id");
		return id;
	}

	/**
	 * Sets the  {@link #id}  instance variable. <span style="display: none;">Generated setter method. To avoid re-generation, remove the &#64;Generated annotation.</span>
	 * @param anId  the value assigned to the instance variable.
	 */
	@Generated(type = GeneratedType.SETTER, generatedFor = "id")
	public void setId(Long anId) {
		resolveSet("id");
		id = anId;
	}

	/**
	 * Returns the  {@link #lastUser}  instance variable. <span style="display: none;">Generated getter method. To avoid re-generation, remove the &#64;Generated annotation.</span>
	 * @return  the 'lastUser' instance variable.
	 */
	@Generated(type = GeneratedType.GETTER, generatedFor = "lastUser")
	public String getLastUser() {
		resolveGet("lastUser");
		return lastUser;
	}

	/**
	 * Sets the  {@link #lastUser}  instance variable. <span style="display: none;">Generated setter method. To avoid re-generation, remove the &#64;Generated annotation.</span>
	 * @param aLastUser  the value assigned to the instance variable.
	 */
	@Generated(type = GeneratedType.SETTER, generatedFor = "lastUser")
	public void setLastUser(String aLastUser) {
		resolveSet("lastUser");
		lastUser = aLastUser;
	}

	@PreUpdate
	@PrePersist
	public void onChange() {
		setLastUser(ApplicationContextManager.getCurrentUserName());
	}
}
